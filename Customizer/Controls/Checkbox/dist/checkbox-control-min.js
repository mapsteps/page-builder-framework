var n;(n=window.wp.customize)&&(n.controlConstructor["wpbf-checkbox"]=n.wpbfDynamicControl.extend({initWpbfControl:function(n){var t,i=n||this;null===(t=i.container)||void 0===t||t.on("change","input",function(){var n;null===(n=i.setting)||void 0===n||n.set(jQuery(this).is(":checked"))})}}),n.controlConstructor["wpbf-toggle"]=n.wpbfDynamicControl.extend({initWpbfControl:function(n){var t,i=n||this;null===(t=i.container)||void 0===t||t.on("change","input",function(){var n;null===(n=i.setting)||void 0===n||n.set(jQuery(this).is(":checked"))})}}),n.controlConstructor["wpbf-checkbox-buttonset"]=n.wpbfDynamicControl.extend({currentValue:void 0,initWpbfControl:function(n){},ready:function(){var n,t,i,o=this;this.currentValue=null===(n=this.setting)||void 0===n?void 0:n.get(),null===(t=this.container)||void 0===t||t.on("change",".switch-input",function(n){var t,i=[];if(!o.container)return i;o.container[0].querySelectorAll(".switch-input:checked").forEach(function(n){n instanceof HTMLInputElement&&i.push(n.value)}),null===(t=o.setting)||void 0===t||t.set(i)}),null===(i=this.setting)||void 0===i||i.bind(function(n){var t;null===(t=o.updateComponentState)||void 0===t||t.call(o,n)})},updateComponentState:function(n){this.currentValue!==n&&this.container&&this.container[0].querySelectorAll(".switch-input").forEach(function(t){t instanceof HTMLInputElement&&(t.checked=n.includes(t.value))})}}));
//# sourceMappingURL=checkbox-control-min.js.map
