{"mappings":"AAEAA,GAAGC,UAAUC,mBAAkB,oBAAuBF,GAAGC,UAAUE,oBAAoBC,OAAM,CAE5FC,iBAAgB,SAAYC,IAC3BA,EAAUA,GAAOC,MAGTC,UAAUC,GAAE,SAAU,SAAS,WACtC,IAAIC,EAAK,GACRC,EAAI,EAGLC,OAAOC,KAAMP,EAAQQ,OAAOC,SAAO,SAAYC,GACzCV,EAAQE,UAAUS,KAAI,gBAAoBD,EAAG,MAAUE,GAAE,aAC7DZ,EAAQE,UAAUS,KAAI,gBAAoBD,EAAG,MAAUG,SAASC,SAAQ,WACxEV,EAAOC,GAAMK,EACbL,KAEAL,EAAQE,UAAUS,KAAI,gBAAoBD,EAAG,MAAUG,SAASE,YAAW,cAK7Ef,EAAQgB,QAAQC,IAAKb","sources":["src/control.js"],"sourcesContent":["import \"./control.scss\";\n\nwp.customize.controlConstructor['kirki-multicheck'] = wp.customize.kirkiDynamicControl.extend( {\n\n\tinitKirkiControl: function( control ) {\n\t\tcontrol = control || this;\n\n\t\t// Save the value\n\t\tcontrol.container.on( 'change', 'input', function() {\n\t\t\tvar value = [],\n\t\t\t\ti = 0;\n\n\t\t\t// Build the value as an object using the sub-values from individual checkboxes.\n\t\t\tjQuery.each( control.params.choices, function( key ) {\n\t\t\t\tif ( control.container.find( 'input[value=\"' + key + '\"]' ).is( ':checked' ) ) {\n\t\t\t\t\tcontrol.container.find( 'input[value=\"' + key + '\"]' ).parent().addClass( 'checked' );\n\t\t\t\t\tvalue[ i ] = key;\n\t\t\t\t\ti++;\n\t\t\t\t} else {\n\t\t\t\t\tcontrol.container.find( 'input[value=\"' + key + '\"]' ).parent().removeClass( 'checked' );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\t// Update the value in the customizer.\n\t\t\tcontrol.setting.set( value );\n\t\t} );\n\t}\n} );\n"],"names":["wp","customize","controlConstructor","kirkiDynamicControl","extend","initKirkiControl","control","this","container","on","value","i","jQuery","each","params","choices","key","find","is","parent","addClass","removeClass","setting","set"],"version":3,"file":"control.js.map"}