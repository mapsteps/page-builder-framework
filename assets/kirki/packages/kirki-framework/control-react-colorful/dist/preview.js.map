{"version":3,"file":"preview.js","mappings":"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","sources":["webpack://control-react-colorful/./src/preview.js"],"sourcesContent":["(() => {\n\t/**\n\t * Check if the provided value is a numeric.\n\t *\n\t * Thanks to Dan (https://stackoverflow.com/users/17121/dan) for his answer on StackOverflow:\n\t * @see https://stackoverflow.com/questions/175739/built-in-way-in-javascript-to-check-if-a-string-is-a-valid-number#answer-175787\n\t *\n\t * @param {string|number} str The provided value.\n\t * @return bool\n\t */\n\tconst isNumeric = (str) => {\n\n\t\t// Number is a numeric.\n\t\tif ('number' === typeof str) return true;\n\n\t\t// We only process strings.\n\t\tif ('string' !== typeof str) return false;\n\n\t\t// Use type coercion to parse the entirety of the string (`parseFloat` alone does not do this) and ensure strings of whitespace fail.\n\t\treturn (!isNaN(str) && !isNaN(parseFloat(str)));\n\n\t};\n\n\t/**\n\t * Generate value from color object.\n\t *\n\t * @param {Object} value The value.\n\t * @return string\n\t */\n\tconst generateStringValue = (value) => {\n\n\t\talphaEnabled = false;\n\n\t\tif (value.r || value.g || value.b) {\n\t\t\tcolorMode = \"undefined\" !== typeof value.a ? 'rgba' : 'rgb';\n\t\t\talphaEnabled = 'rgba' === colorMode ? true : alphaEnabled;\n\n\t\t\tpos1 = value.r;\n\t\t\tpos2 = value.g;\n\t\t\tpos3 = value.b;\n\t\t\tpos4 = 'rgba' === colorMode ? value.a : 1;\n\t\t} else if (value.h || value.s) {\n\t\t\tpos1 = value.h;\n\n\t\t\tif (value.l) {\n\t\t\t\tcolorMode = \"undefined\" !== typeof value.a ? 'hsla' : 'hsl';\n\t\t\t\tpos2 = isNumeric(value.l) ? value.l + '%' : value.l;\n\t\t\t} else if (value.v) {\n\t\t\t\tcolorMode = \"undefined\" !== typeof value.a ? 'hvla' : 'hvl';\n\t\t\t\tpos2 = isNumeric(value.v) ? value.v + '%' : value.v;\n\t\t\t}\n\n\t\t\talphaEnabled = 'hsla' === colorMode || 'hsva' === colorMode ? true : alphaEnabled;\n\n\t\t\tpos3 = isNumeric(value) ? value.s + '%' : value.s;\n\t\t\tpos4 = alphaEnabled ? value.a : 1;\n\t\t}\n\n\t\tif (alphaEnabled) {\n\t\t\tformattedValue = colorMode + '(' + pos1 + ', ' + pos2 + ', ' + pos3 + ', ' + pos4 + ')';\n\t\t} else {\n\t\t\tformattedValue = colorMode + '(' + pos1 + ', ' + pos2 + ', ' + pos3 + ')';\n\t\t}\n\n\t\treturn formattedValue;\n\n\t};\n\n\t/**\n\t * Function to hook into `kirkiPostMessageStylesOutput` filter.\n\t *\n\t * @param {string} styles The styles to be filtered.\n\t * @param {string|Object|int} value The control's value.\n\t * @param {Object} output The control's output argument.\n\t * @param {string} controlType The control type.\n\t *\n\t * @return {string} The filtered styles.\n\t */\n\tconst stylesOutput = (styles, value, output, controlType) => {\n\n\t\tif ('kirki-react-colorful' !== controlType) return styles;\n\t\tif ('string' === typeof value || 'number' === typeof value) return styles;\n\n\t\tconst prefix = output.prefix ? output.prefix : '';\n\t\tconst suffix = output.suffix ? output.suffix : \"\";\n\n\t\tstyles += output.element + '{'\n\t\t\t+ output.property + ': ' + prefix + generateStringValue(value) + suffix + ';\\\n\t\t}';\n\n\t\treturn styles;\n\n\t};\n\n\t// Hook the function to the `kirkiPostMessageStylesOutput` filter.\n\twp.hooks.addFilter('kirkiPostMessageStylesOutput', 'kirki', stylesOutput);\n})();\n"],"names":["isNumeric","str","isNaN","parseFloat","generateStringValue","value","alphaEnabled","r","g","b","colorMode","a","pos1","pos2","pos3","pos4","h","s","l","v","formattedValue","stylesOutput","styles","output","controlType","prefix","suffix","element","property","wp","hooks","addFilter"],"sourceRoot":""}