{"mappings":"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","sources":["src/control.js"],"sourcesContent":["import \"./control.scss\";\n\n/* global kirkiControlLoader */\n/* eslint max-depth: 0 */\n/* eslint no-useless-escape: 0 */\nvar RepeaterRow = function( rowIndex, container, label, control ) {\n\tvar self        = this;\n\tthis.rowIndex   = rowIndex;\n\tthis.container  = container;\n\tthis.label      = label;\n\tthis.header     = this.container.find( '.repeater-row-header' );\n\n\tthis.header.on( 'click', function() {\n\t\tself.toggleMinimize();\n\t} );\n\n\tthis.container.on( 'click', '.repeater-row-remove', function() {\n\t\tself.remove();\n\t} );\n\n\tthis.header.on( 'mousedown', function() {\n\t\tself.container.trigger( 'row:start-dragging' );\n\t} );\n\n\tthis.container.on( 'keyup change', 'input, select, textarea', function( e ) {\n\t\tself.container.trigger( 'row:update', [ self.rowIndex, jQuery( e.target ).data( 'field' ), e.target ] );\n\t} );\n\n\tthis.setRowIndex = function( rowNum ) {\n\t\tthis.rowIndex = rowNum;\n\t\tthis.container.attr( 'data-row', rowNum );\n\t\tthis.container.data( 'row', rowNum );\n\t\tthis.updateLabel();\n\t};\n\n\tthis.toggleMinimize = function() {\n\n\t\t// Store the previous state.\n\t\tthis.container.toggleClass( 'minimized' );\n\t\tthis.header.find( '.dashicons' ).toggleClass( 'dashicons-arrow-up' ).toggleClass( 'dashicons-arrow-down' );\n\t};\n\n\tthis.remove = function() {\n\t\tthis.container.slideUp( 300, function() {\n\t\t\tjQuery( this ).detach();\n\t\t} );\n\t\tthis.container.trigger( 'row:remove', [ this.rowIndex ] );\n\t};\n\n\tthis.updateLabel = function() {\n\t\tvar rowLabelField,\n\t\t\trowLabel,\n\t\t\trowLabelSelector;\n\n\t\tif ( 'field' === this.label.type ) {\n\t\t\trowLabelField = this.container.find( '.repeater-field [data-field=\"' + this.label.field + '\"]' );\n\t\t\tif ( _.isFunction( rowLabelField.val ) ) {\n\t\t\t\trowLabel = rowLabelField.val();\n\t\t\t\tif ( '' !== rowLabel ) {\n\t\t\t\t\tif ( ! _.isUndefined( control.params.fields[ this.label.field ] ) ) {\n\t\t\t\t\t\tif ( ! _.isUndefined( control.params.fields[ this.label.field ].type ) ) {\n\t\t\t\t\t\t\tif ( 'select' === control.params.fields[ this.label.field ].type ) {\n\t\t\t\t\t\t\t\tif ( ! _.isUndefined( control.params.fields[ this.label.field ].choices ) && ! _.isUndefined( control.params.fields[ this.label.field ].choices[ rowLabelField.val() ] ) ) {\n\t\t\t\t\t\t\t\t\trowLabel = control.params.fields[ this.label.field ].choices[ rowLabelField.val() ];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if ( 'radio' === control.params.fields[ this.label.field ].type || 'radio-image' === control.params.fields[ this.label.field ].type ) {\n\t\t\t\t\t\t\t\trowLabelSelector = control.selector + ' [data-row=\"' + this.rowIndex + '\"] .repeater-field [data-field=\"' + this.label.field + '\"]:checked';\n\t\t\t\t\t\t\t\trowLabel = jQuery( rowLabelSelector ).val();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis.header.find( '.repeater-row-label' ).text( rowLabel );\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis.header.find( '.repeater-row-label' ).text( this.label.value + ' ' + ( this.rowIndex + 1 ) );\n\t};\n\tthis.updateLabel();\n};\n\nwp.customize.controlConstructor.repeater = wp.customize.Control.extend( {\n\n\t// When we're finished loading continue processing\n\tready: function() {\n\t\tvar control = this;\n\n\t\t// Init the control.\n\t\tif ( ! _.isUndefined( window.kirkiControlLoader ) && _.isFunction( kirkiControlLoader ) ) {\n\t\t\tkirkiControlLoader( control );\n\t\t} else {\n\t\t\tcontrol.initKirkiControl();\n\t\t}\n\t},\n\n\tinitKirkiControl: function( control ) {\n\t\tvar limit, theNewRow, settingValue;\n\t\tcontrol = control || this;\n\n\t\t// The current value set in Control Class (set in Kirki_Customize_Repeater_Control::to_json() function)\n\t\tsettingValue = control.params.value;\n\n\t\t// The hidden field that keeps the data saved (though we never update it)\n\t\tcontrol.settingField = control.container.find( '[data-customize-setting-link]' ).first();\n\n\t\t// Set the field value for the first time, we'll fill it up later\n\t\tcontrol.setValue( [], false );\n\n\t\t// The DIV that holds all the rows\n\t\tcontrol.repeaterFieldsContainer = control.container.find( '.repeater-fields' ).first();\n\n\t\t// Set number of rows to 0\n\t\tcontrol.currentIndex = 0;\n\n\t\t// Save the rows objects\n\t\tcontrol.rows = [];\n\n\t\t// Default limit choice\n\t\tlimit = false;\n\t\tif ( ! _.isUndefined( control.params.choices.limit ) ) {\n\t\t\tlimit = ( 0 >= control.params.choices.limit ) ? false : parseInt( control.params.choices.limit, 10 );\n\t\t}\n\n\t\tcontrol.container.on( 'click', 'button.repeater-add', function( e ) {\n\t\t\te.preventDefault();\n\t\t\tif ( ! limit || control.currentIndex < limit ) {\n\t\t\t\ttheNewRow = control.addRow();\n\t\t\t\ttheNewRow.toggleMinimize();\n\t\t\t\tcontrol.initColorPicker();\n\t\t\t\tcontrol.initSelect( theNewRow );\n\t\t\t} else {\n\t\t\t\tjQuery( control.selector + ' .limit' ).addClass( 'highlight' );\n\t\t\t}\n\t\t} );\n\n\t\tcontrol.container.on( 'click', '.repeater-row-remove', function() {\n\t\t\tcontrol.currentIndex--;\n\t\t\tif ( ! limit || control.currentIndex < limit ) {\n\t\t\t\tjQuery( control.selector + ' .limit' ).removeClass( 'highlight' );\n\t\t\t}\n\t\t} );\n\n\t\tcontrol.container.on( 'click keypress', '.repeater-field-image .upload-button,.repeater-field-cropped_image .upload-button,.repeater-field-upload .upload-button', function( e ) {\n\t\t\te.preventDefault();\n\t\t\tcontrol.$thisButton = jQuery( this );\n\t\t\tcontrol.openFrame( e );\n\t\t} );\n\n\t\tcontrol.container.on( 'click keypress', '.repeater-field-image .remove-button,.repeater-field-cropped_image .remove-button', function( e ) {\n\t\t\te.preventDefault();\n\t\t\tcontrol.$thisButton = jQuery( this );\n\t\t\tcontrol.removeImage( e );\n\t\t} );\n\n\t\tcontrol.container.on( 'click keypress', '.repeater-field-upload .remove-button', function( e ) {\n\t\t\te.preventDefault();\n\t\t\tcontrol.$thisButton = jQuery( this );\n\t\t\tcontrol.removeFile( e );\n\t\t} );\n\n\t\t/**\n\t\t * Function that loads the Mustache template\n\t\t */\n\t\tcontrol.repeaterTemplate = _.memoize( function() {\n\t\t\tvar compiled,\n\n\t\t\t\t/*\n\t\t\t\t * Underscore's default ERB-style templates are incompatible with PHP\n\t\t\t\t * when asp_tags is enabled, so WordPress uses Mustache-inspired templating syntax.\n\t\t\t\t *\n\t\t\t\t * @see trac ticket #22344.\n\t\t\t\t */\n\t\t\t\toptions = {\n\t\t\t\t\tevaluate: /<#([\\s\\S]+?)#>/g,\n\t\t\t\t\tinterpolate: /\\{\\{\\{([\\s\\S]+?)\\}\\}\\}/g,\n\t\t\t\t\tescape: /\\{\\{([^\\}]+?)\\}\\}(?!\\})/g,\n\t\t\t\t\tvariable: 'data'\n\t\t\t\t};\n\n\t\t\treturn function( data ) {\n\t\t\t\tcompiled = _.template( control.container.find( '.customize-control-repeater-content' ).first().html(), null, options );\n\t\t\t\treturn compiled( data );\n\t\t\t};\n\t\t} );\n\n\t\t// When we load the control, the fields have not been filled up\n\t\t// This is the first time that we create all the rows\n\t\tif ( settingValue.length ) {\n\t\t\t_.each( settingValue, function( subValue ) {\n\t\t\t\ttheNewRow = control.addRow( subValue );\n\t\t\t\tcontrol.initColorPicker();\n\t\t\t\tcontrol.initSelect( theNewRow, subValue );\n\t\t\t} );\n\t\t}\n\n\t\tcontrol.repeaterFieldsContainer.sortable( {\n\t\t\thandle: '.repeater-row-header',\n\t\t\tupdate: function() {\n\t\t\t\tcontrol.sort();\n\t\t\t}\n\t\t} );\n\n\t},\n\n\t/**\n\t * Open the media modal.\n\t *\n\t * @param {Object} event - The JS event.\n\t * @returns {void}\n\t */\n\topenFrame: function( event ) {\n\t\tif ( wp.customize.utils.isKeydownButNotEnterEvent( event ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( this.$thisButton.closest( '.repeater-field' ).hasClass( 'repeater-field-cropped_image' ) ) {\n\t\t\tthis.initCropperFrame();\n\t\t} else {\n\t\t\tthis.initFrame();\n\t\t}\n\n\t\tthis.frame.open();\n\t},\n\n\tinitFrame: function() {\n\t\tvar libMediaType = this.getMimeType();\n\n\t\tthis.frame = wp.media( {\n\t\t\tstates: [\n\t\t\tnew wp.media.controller.Library( {\n\t\t\t\t\tlibrary: wp.media.query( { type: libMediaType } ),\n\t\t\t\t\tmultiple: false,\n\t\t\t\t\tdate: false\n\t\t\t\t} )\n\t\t\t]\n\t\t} );\n\n\t\t// When a file is selected, run a callback.\n\t\tthis.frame.on( 'select', this.onSelect, this );\n\t},\n\n\t/**\n\t * Create a media modal select frame, and store it so the instance can be reused when needed.\n\t * This is mostly a copy/paste of Core api.CroppedImageControl in /wp-admin/js/customize-control.js\n\t *\n\t * @returns {void}\n\t */\n\tinitCropperFrame: function() {\n\n\t\t// We get the field id from which this was called\n\t\tvar currentFieldId = this.$thisButton.siblings( 'input.hidden-field' ).attr( 'data-field' ),\n\t\t\tattrs          = [ 'width', 'height', 'flex_width', 'flex_height' ], // A list of attributes to look for\n\t\t\tlibMediaType   = this.getMimeType();\n\n\t\t// Make sure we got it\n\t\tif ( _.isString( currentFieldId ) && '' !== currentFieldId ) {\n\n\t\t\t// Make fields is defined and only do the hack for cropped_image\n\t\t\tif ( _.isObject( this.params.fields[ currentFieldId ] ) && 'cropped_image' === this.params.fields[ currentFieldId ].type ) {\n\n\t\t\t\t//Iterate over the list of attributes\n\t\t\t\tattrs.forEach( function( el ) {\n\n\t\t\t\t\t// If the attribute exists in the field\n\t\t\t\t\tif ( ! _.isUndefined( this.params.fields[ currentFieldId ][ el ] ) ) {\n\n\t\t\t\t\t\t// Set the attribute in the main object\n\t\t\t\t\t\tthis.params[ el ] = this.params.fields[ currentFieldId ][ el ];\n\t\t\t\t\t}\n\t\t\t\t}.bind( this ) );\n\t\t\t}\n\t\t}\n\n\t\tthis.frame = wp.media( {\n\t\t\tbutton: {\n\t\t\t\ttext: 'Select and Crop',\n\t\t\t\tclose: false\n\t\t\t},\n\t\t\tstates: [\n\t\t\t\tnew wp.media.controller.Library( {\n\t\t\t\t\tlibrary: wp.media.query( { type: libMediaType } ),\n\t\t\t\t\tmultiple: false,\n\t\t\t\t\tdate: false,\n\t\t\t\t\tsuggestedWidth: this.params.width,\n\t\t\t\t\tsuggestedHeight: this.params.height\n\t\t\t\t} ),\n\t\t\t\tnew wp.media.controller.CustomizeImageCropper( {\n\t\t\t\t\timgSelectOptions: this.calculateImageSelectOptions,\n\t\t\t\t\tcontrol: this\n\t\t\t\t} )\n\t\t\t]\n\t\t} );\n\n\t\tthis.frame.on( 'select', this.onSelectForCrop, this );\n\t\tthis.frame.on( 'cropped', this.onCropped, this );\n\t\tthis.frame.on( 'skippedcrop', this.onSkippedCrop, this );\n\n\t},\n\n\tonSelect: function() {\n\t\tvar attachment = this.frame.state().get( 'selection' ).first().toJSON();\n\n\t\tif ( this.$thisButton.closest( '.repeater-field' ).hasClass( 'repeater-field-upload' ) ) {\n\t\t\tthis.setFileInRepeaterField( attachment );\n\t\t} else {\n\t\t\tthis.setImageInRepeaterField( attachment );\n\t\t}\n\t},\n\n\t/**\n\t * After an image is selected in the media modal, switch to the cropper\n\t * state if the image isn't the right size.\n\t */\n\n\tonSelectForCrop: function() {\n\t\tvar attachment = this.frame.state().get( 'selection' ).first().toJSON();\n\n\t\tif ( this.params.width === attachment.width && this.params.height === attachment.height && ! this.params.flex_width && ! this.params.flex_height ) {\n\t\t\tthis.setImageInRepeaterField( attachment );\n\t\t} else {\n\t\t\tthis.frame.setState( 'cropper' );\n\t\t}\n\t},\n\n\t/**\n\t * After the image has been cropped, apply the cropped image data to the setting.\n\t *\n\t * @param {object} croppedImage Cropped attachment data.\n\t * @returns {void}\n\t */\n\tonCropped: function( croppedImage ) {\n\t\tthis.setImageInRepeaterField( croppedImage );\n\t},\n\n\t/**\n\t * Returns a set of options, computed from the attached image data and\n\t * control-specific data, to be fed to the imgAreaSelect plugin in\n\t * wp.media.view.Cropper.\n\t *\n\t * @param {wp.media.model.Attachment} attachment - The attachment from the WP API.\n\t * @param {wp.media.controller.Cropper} controller - Media controller.\n\t * @returns {Object} - Options.\n\t */\n\tcalculateImageSelectOptions: function( attachment, controller ) {\n\t\tvar control    = controller.get( 'control' ),\n\t\t\tflexWidth  = !! parseInt( control.params.flex_width, 10 ),\n\t\t\tflexHeight = !! parseInt( control.params.flex_height, 10 ),\n\t\t\trealWidth  = attachment.get( 'width' ),\n\t\t\trealHeight = attachment.get( 'height' ),\n\t\t\txInit      = parseInt( control.params.width, 10 ),\n\t\t\tyInit      = parseInt( control.params.height, 10 ),\n\t\t\tratio      = xInit / yInit,\n\t\t\txImg       = realWidth,\n\t\t\tyImg       = realHeight,\n\t\t\tx1,\n\t\t\ty1,\n\t\t\timgSelectOptions;\n\n\t\tcontroller.set( 'canSkipCrop', ! control.mustBeCropped( flexWidth, flexHeight, xInit, yInit, realWidth, realHeight ) );\n\n\t\tif ( xImg / yImg > ratio ) {\n\t\t\tyInit = yImg;\n\t\t\txInit = yInit * ratio;\n\t\t} else {\n\t\t\txInit = xImg;\n\t\t\tyInit = xInit / ratio;\n\t\t}\n\n\t\tx1 = ( xImg - xInit ) / 2;\n\t\ty1 = ( yImg - yInit ) / 2;\n\n\t\timgSelectOptions = {\n\t\t\thandles: true,\n\t\t\tkeys: true,\n\t\t\tinstance: true,\n\t\t\tpersistent: true,\n\t\t\timageWidth: realWidth,\n\t\t\timageHeight: realHeight,\n\t\t\tx1: x1,\n\t\t\ty1: y1,\n\t\t\tx2: xInit + x1,\n\t\t\ty2: yInit + y1\n\t\t};\n\n\t\tif ( false === flexHeight && false === flexWidth ) {\n\t\t\timgSelectOptions.aspectRatio = xInit + ':' + yInit;\n\t\t}\n\t\tif ( false === flexHeight ) {\n\t\t\timgSelectOptions.maxHeight = yInit;\n\t\t}\n\t\tif ( false === flexWidth ) {\n\t\t\timgSelectOptions.maxWidth = xInit;\n\t\t}\n\n\t\treturn imgSelectOptions;\n\t},\n\n\t/**\n\t * Return whether the image must be cropped, based on required dimensions.\n\t *\n\t * @param {bool} flexW - The flex-width.\n\t * @param {bool} flexH - The flex-height.\n\t * @param {int}  dstW - Initial point distance in the X axis.\n\t * @param {int}  dstH - Initial point distance in the Y axis.\n\t * @param {int}  imgW - Width.\n\t * @param {int}  imgH - Height.\n\t * @returns {bool} - Whether the image must be cropped or not based on required dimensions.\n\t */\n\tmustBeCropped: function( flexW, flexH, dstW, dstH, imgW, imgH ) {\n\t\treturn ! ( ( true === flexW && true === flexH ) || ( true === flexW && dstH === imgH ) || ( true === flexH && dstW === imgW ) || ( dstW === imgW && dstH === imgH ) || ( imgW <= dstW ) );\n\t},\n\n\t/**\n\t * If cropping was skipped, apply the image data directly to the setting.\n\t *\n\t * @returns {void}\n\t */\n\tonSkippedCrop: function() {\n\t\tvar attachment = this.frame.state().get( 'selection' ).first().toJSON();\n\t\tthis.setImageInRepeaterField( attachment );\n\t},\n\n\t/**\n\t * Updates the setting and re-renders the control UI.\n\t *\n\t * @param {object} attachment - The attachment object.\n\t * @returns {void}\n\t */\n\tsetImageInRepeaterField: function( attachment ) {\n\t\tvar $targetDiv = this.$thisButton.closest( '.repeater-field-image,.repeater-field-cropped_image' );\n\n\t\t$targetDiv.find( '.kirki-image-attachment' ).html( '<img src=\"' + attachment.url + '\">' ).hide().slideDown( 'slow' );\n\n\t\t$targetDiv.find( '.hidden-field' ).val( attachment.id );\n\t\tthis.$thisButton.text( this.$thisButton.data( 'alt-label' ) );\n\t\t$targetDiv.find( '.remove-button' ).show();\n\n\t\t//This will activate the save button\n\t\t$targetDiv.find( 'input, textarea, select' ).trigger( 'change' );\n\t\tthis.frame.close();\n\t},\n\n\t/**\n\t * Updates the setting and re-renders the control UI.\n\t *\n\t * @param {object} attachment - The attachment object.\n\t * @returns {void}\n\t */\n\tsetFileInRepeaterField: function( attachment ) {\n\t\tvar $targetDiv = this.$thisButton.closest( '.repeater-field-upload' );\n\n\t\t$targetDiv.find( '.kirki-file-attachment' ).html( '<span class=\"file\"><span class=\"dashicons dashicons-media-default\"></span> ' + attachment.filename + '</span>' ).hide().slideDown( 'slow' );\n\n\t\t$targetDiv.find( '.hidden-field' ).val( attachment.id );\n\t\tthis.$thisButton.text( this.$thisButton.data( 'alt-label' ) );\n\t\t$targetDiv.find( '.upload-button' ).show();\n\t\t$targetDiv.find( '.remove-button' ).show();\n\n\t\t//This will activate the save button\n\t\t$targetDiv.find( 'input, textarea, select' ).trigger( 'change' );\n\t\tthis.frame.close();\n\t},\n\n\tgetMimeType: function() {\n\n\t\t// We get the field id from which this was called\n\t\tvar currentFieldId = this.$thisButton.siblings( 'input.hidden-field' ).attr( 'data-field' );\n\n\t\t// Make sure we got it\n\t\tif ( _.isString( currentFieldId ) && '' !== currentFieldId ) {\n\n\t\t\t// Make fields is defined and only do the hack for cropped_image\n\t\t\tif ( _.isObject( this.params.fields[ currentFieldId ] ) && 'upload' === this.params.fields[ currentFieldId ].type ) {\n\n\t\t\t\t// If the attribute exists in the field\n\t\t\t\tif ( ! _.isUndefined( this.params.fields[ currentFieldId ].mime_type ) ) {\n\n\t\t\t\t\t// Set the attribute in the main object\n\t\t\t\t\treturn this.params.fields[ currentFieldId ].mime_type;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn 'image';\n\t},\n\n\tremoveImage: function( event ) {\n\t\tvar $targetDiv,\n\t\t\t$uploadButton;\n\n\t\tif ( wp.customize.utils.isKeydownButNotEnterEvent( event ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$targetDiv = this.$thisButton.closest( '.repeater-field-image,.repeater-field-cropped_image,.repeater-field-upload' );\n\t\t$uploadButton = $targetDiv.find( '.upload-button' );\n\n\t\t$targetDiv.find( '.kirki-image-attachment' ).slideUp( 'fast', function() {\n\t\t\tjQuery( this ).show().html( jQuery( this ).data( 'placeholder' ) );\n\t\t} );\n\t\t$targetDiv.find( '.hidden-field' ).val( '' );\n\t\t$uploadButton.text( $uploadButton.data( 'label' ) );\n\t\tthis.$thisButton.hide();\n\n\t\t$targetDiv.find( 'input, textarea, select' ).trigger( 'change' );\n\t},\n\n\tremoveFile: function( event ) {\n\t\tvar $targetDiv,\n\t\t\t$uploadButton;\n\n\t\tif ( wp.customize.utils.isKeydownButNotEnterEvent( event ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$targetDiv = this.$thisButton.closest( '.repeater-field-upload' );\n\t\t$uploadButton = $targetDiv.find( '.upload-button' );\n\n\t\t$targetDiv.find( '.kirki-file-attachment' ).slideUp( 'fast', function() {\n\t\t\tjQuery( this ).show().html( jQuery( this ).data( 'placeholder' ) );\n\t\t} );\n\t\t$targetDiv.find( '.hidden-field' ).val( '' );\n\t\t$uploadButton.text( $uploadButton.data( 'label' ) );\n\t\tthis.$thisButton.hide();\n\n\t\t$targetDiv.find( 'input, textarea, select' ).trigger( 'change' );\n\n\t},\n\n\t/**\n\t * Get the current value of the setting\n\t *\n\t * @returns {Object} - Returns the value.\n\t */\n\tgetValue: function() {\n\n\t\t// The setting is saved in JSON\n\t\treturn JSON.parse( decodeURI( this.setting.get() ) );\n\t},\n\n\t/**\n\t * Set a new value for the setting\n\t *\n\t * @param {Object} newValue - The new value.\n\t * @param {bool} refresh - If we want to refresh the previewer or not\n\t * @param {bool} filtering - If we want to filter or not.\n\t * @returns {void}\n\t */\n\tsetValue: function( newValue, refresh, filtering ) {\n\n\t\t// We need to filter the values after the first load to remove data requrired for diplay but that we don't want to save in DB\n\t\tvar filteredValue = newValue,\n\t\t\tfilter        = [];\n\n\t\tif ( filtering ) {\n\t\t\tjQuery.each( this.params.fields, function( index, value ) {\n\t\t\t\tif ( 'image' === value.type || 'cropped_image' === value.type || 'upload' === value.type ) {\n\t\t\t\t\tfilter.push( index );\n\t\t\t\t}\n\t\t\t} );\n\t\t\tjQuery.each( newValue, function( index, value ) {\n\t\t\t\tjQuery.each( filter, function( ind, field ) {\n\t\t\t\t\tif ( ! _.isUndefined( value[ field ] ) && ! _.isUndefined( value[ field ].id ) ) {\n\t\t\t\t\t\tfilteredValue[index][ field ] = value[ field ].id;\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t} );\n\t\t}\n\n\t\tthis.setting.set( encodeURI( JSON.stringify( filteredValue ) ) );\n\n\t\tif ( refresh ) {\n\n\t\t\t// Trigger the change event on the hidden field so\n\t\t\t// previewer refresh the website on Customizer\n\t\t\tthis.settingField.trigger( 'change' );\n\t\t}\n\t},\n\n\t/**\n\t * Add a new row to repeater settings based on the structure.\n\t *\n\t * @param {Object} data - (Optional) Object of field => value pairs (undefined if you want to get the default values)\n\t * @returns {Object} - Returns the new row.\n\t */\n\taddRow: function( data ) {\n\t\tvar control       = this,\n\t\t\ttemplate      = control.repeaterTemplate(), // The template for the new row (defined on Kirki_Customize_Repeater_Control::render_content() ).\n\t\t\tsettingValue  = this.getValue(), // Get the current setting value.\n\t\t\tnewRowSetting = {}, // Saves the new setting data.\n\t\t\ttemplateData, // Data to pass to the template\n\t\t\tnewRow,\n\t\t\ti;\n\n\t\tif ( template ) {\n\n\t\t\t// The control structure is going to define the new fields\n\t\t\t// We need to clone control.params.fields. Assigning it\n\t\t\t// ould result in a reference assignment.\n\t\t\ttemplateData = jQuery.extend( true, {}, control.params.fields );\n\n\t\t\t// But if we have passed data, we'll use the data values instead\n\t\t\tif ( data ) {\n\t\t\t\tfor ( i in data ) {\n\t\t\t\t\tif ( data.hasOwnProperty( i ) && templateData.hasOwnProperty( i ) ) {\n\t\t\t\t\t\ttemplateData[ i ].default = data[ i ];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttemplateData.index = this.currentIndex;\n\n\t\t\t// Append the template content\n\t\t\ttemplate = template( templateData );\n\n\t\t\t// Create a new row object and append the element\n\t\t\tnewRow = new RepeaterRow(\n\t\t\t\tcontrol.currentIndex,\n\t\t\t\tjQuery( template ).appendTo( control.repeaterFieldsContainer ),\n\t\t\t\tcontrol.params.row_label,\n\t\t\t\tcontrol\n\t\t\t);\n\n\t\t\tnewRow.container.on( 'row:remove', function( e, rowIndex ) {\n\t\t\t\tcontrol.deleteRow( rowIndex );\n\t\t\t} );\n\n\t\t\tnewRow.container.on( 'row:update', function( e, rowIndex, fieldName, element ) {\n\t\t\t\tcontrol.updateField.call( control, e, rowIndex, fieldName, element ); // eslint-disable-line no-useless-call\n\t\t\t\tnewRow.updateLabel();\n\t\t\t} );\n\n\t\t\t// Add the row to rows collection\n\t\t\tthis.rows[ this.currentIndex ] = newRow;\n\n\t\t\tfor ( i in templateData ) {\n\t\t\t\tif ( templateData.hasOwnProperty( i ) ) {\n\t\t\t\t\tnewRowSetting[ i ] = templateData[ i ].default;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tsettingValue[ this.currentIndex ] = newRowSetting;\n\t\t\tthis.setValue( settingValue, true );\n\n\t\t\tthis.currentIndex++;\n\n\t\t\treturn newRow;\n\t\t}\n\t},\n\n\tsort: function() {\n\t\tvar control     = this,\n\t\t\t$rows       = this.repeaterFieldsContainer.find( '.repeater-row' ),\n\t\t\tnewOrder    = [],\n\t\t\tsettings    = control.getValue(),\n\t\t\tnewRows     = [],\n\t\t\tnewSettings = [];\n\n\t\t$rows.each( function( i, element ) {\n\t\t\tnewOrder.push( jQuery( element ).data( 'row' ) );\n\t\t} );\n\n\t\tjQuery.each( newOrder, function( newPosition, oldPosition ) {\n\t\t\tnewRows[ newPosition ] = control.rows[ oldPosition ];\n\t\t\tnewRows[ newPosition ].setRowIndex( newPosition );\n\n\t\t\tnewSettings[ newPosition ] = settings[ oldPosition ];\n\t\t} );\n\n\t\tcontrol.rows = newRows;\n\t\tcontrol.setValue( newSettings );\n\t},\n\n\t/**\n\t * Delete a row in the repeater setting\n\t *\n\t * @param {int} index - Position of the row in the complete Setting Array\n\t * @returns {void}\n\t */\n\tdeleteRow: function( index ) {\n\t\tvar currentSettings = this.getValue(),\n\t\t\trow,\n\t\t\tprop;\n\n\t\tif ( currentSettings[ index ] ) {\n\n\t\t\t// Find the row\n\t\t\trow = this.rows[ index ];\n\t\t\tif ( row ) {\n\n\t\t\t\t// Remove the row settings\n\t\t\t\tdelete currentSettings[ index ];\n\n\t\t\t\t// Remove the row from the rows collection\n\t\t\t\tdelete this.rows[ index ];\n\n\t\t\t\t// Update the new setting values\n\t\t\t\tthis.setValue( currentSettings, true );\n\t\t\t}\n\t\t}\n\n\t\t// Remap the row numbers\n\t\tfor ( prop in this.rows ) {\n\t\t\tif ( this.rows.hasOwnProperty( prop ) && this.rows[ prop ] ) {\n\t\t\t\tthis.rows[ prop ].updateLabel();\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Update a single field inside a row.\n\t * Triggered when a field has changed\n\t *\n\t * @param {Object} e - Event Object\n\t * @param {int} rowIndex - The row's index as an integer.\n\t * @param {string} fieldId - The field ID.\n\t * @param {string|Object} element - The element's identifier, or jQuery Object of the element.\n\t * @returns {void}\n\t */\n\tupdateField: function( e, rowIndex, fieldId, element ) {\n\t\tvar type,\n\t\t\trow,\n\t\t\tcurrentSettings;\n\n\t\tif ( ! this.rows[ rowIndex ] ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( ! this.params.fields[ fieldId ] ) {\n\t\t\treturn;\n\t\t}\n\n\t\ttype            = this.params.fields[ fieldId].type;\n\t\trow             = this.rows[ rowIndex ];\n\t\tcurrentSettings = this.getValue();\n\n\t\telement = jQuery( element );\n\n\t\tif ( _.isUndefined( currentSettings[ row.rowIndex ][ fieldId ] ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( 'checkbox' === type ) {\n\t\t\tcurrentSettings[ row.rowIndex ][ fieldId ] = element.is( ':checked' );\n\t\t} else {\n\n\t\t\t// Update the settings\n\t\t\tcurrentSettings[ row.rowIndex ][ fieldId ] = element.val();\n\t\t}\n\t\tthis.setValue( currentSettings, true );\n\t},\n\n\t/**\n\t * Init the color picker on color fields\n\t * Called after AddRow\n\t *\n\t * @returns {void}\n\t */\n\tinitColorPicker: function() {\n\t\tvar control     = this,\n\t\t\tcolorPicker = control.container.find( '.color-picker-hex' ),\n\t\t\toptions     = {},\n\t\t\tfieldId     = colorPicker.data( 'field' );\n\n\t\t// We check if the color palette parameter is defined.\n\t\tif ( ! _.isUndefined( fieldId ) && ! _.isUndefined( control.params.fields[ fieldId ] ) && ! _.isUndefined( control.params.fields[ fieldId ].palettes ) && _.isObject( control.params.fields[ fieldId ].palettes ) ) {\n\t\t\toptions.palettes = control.params.fields[ fieldId ].palettes;\n\t\t}\n\n\t\t// When the color picker value is changed we update the value of the field\n\t\toptions.change = function( event, ui ) {\n\n\t\t\tvar currentPicker   = jQuery( event.target ),\n\t\t\t\trow             = currentPicker.closest( '.repeater-row' ),\n\t\t\t\trowIndex        = row.data( 'row' ),\n\t\t\t\tcurrentSettings = control.getValue();\n\n\t\t\tcurrentSettings[ rowIndex ][ currentPicker.data( 'field' ) ] = ui.color.toString();\n\t\t\tcontrol.setValue( currentSettings, true );\n\n\t\t};\n\n\t\t// Init the color picker\n\t\tif ( colorPicker.length && 0 !== colorPicker.length ) {\n\t\t\tcolorPicker.wpColorPicker( options );\n\t\t}\n\t},\n\n\t/**\n\t * Init the dropdown-pages field.\n\t * Called after AddRow\n\t *\n\t * @param {object} theNewRow the row that was added to the repeater\n\t * @param {object} data the data for the row if we're initializing a pre-existing row\n\t * @returns {void}\n\t */\n\tinitSelect: function( theNewRow, data ) {\n\t\tvar control  = this,\n\t\t\tdropdown = theNewRow.container.find( '.repeater-field select' ),\n\t\t\tdataField;\n\n\t\tif ( 0 === dropdown.length ) {\n\t\t\treturn;\n\t\t}\n\n\t\tdataField = dropdown.data( 'field' );\n\t\tmultiple  = jQuery( dropdown ).data( 'multiple' );\n\n\t\tdata = data || {};\n\t\tdata[ dataField ] = data[ dataField ] || '';\n\n\t\tjQuery( dropdown ).val( data[ dataField ] || jQuery( dropdown ).val() );\n\n\t\tthis.container.on( 'change', '.repeater-field select', function( event ) {\n\n\t\t\tvar currentDropdown = jQuery( event.target ),\n\t\t\t\trow             = currentDropdown.closest( '.repeater-row' ),\n\t\t\t\trowIndex        = row.data( 'row' ),\n\t\t\t\tcurrentSettings = control.getValue();\n\n\t\t\tcurrentSettings[ rowIndex ][ currentDropdown.data( 'field' ) ] = jQuery( this ).val();\n\t\t\tcontrol.setValue( currentSettings );\n\t\t} );\n\t}\n} );\n"],"names":["$1abc80d3e2df1201$var$RepeaterRow","rowIndex","container","label","control","self","this","header","find","on","toggleMinimize","remove","trigger","e","jQuery","target","data","setRowIndex","rowNum","attr","updateLabel","toggleClass","slideUp","detach","rowLabelField","rowLabel","rowLabelSelector","type","field","_","isFunction","val","isUndefined","params","fields","choices","selector","text","value","wp","customize","controlConstructor","repeater","Control","extend","ready","window","kirkiControlLoader","initKirkiControl","limit","theNewRow","settingValue","settingField","first","setValue","repeaterFieldsContainer","currentIndex","rows","parseInt","preventDefault","addRow","initColorPicker","initSelect","addClass","removeClass","$thisButton","openFrame","removeImage","removeFile","repeaterTemplate","memoize","options","evaluate","interpolate","escape","variable","template","html","compiled","length","each","subValue","sortable","handle","update","sort","event","utils","isKeydownButNotEnterEvent","closest","hasClass","initCropperFrame","initFrame","frame","open","libMediaType","getMimeType","media","states","controller","Library","library","query","multiple","date","onSelect","currentFieldId","siblings","isString","isObject","forEach","el","bind","button","close","suggestedWidth","width","suggestedHeight","height","CustomizeImageCropper","imgSelectOptions","calculateImageSelectOptions","onSelectForCrop","onCropped","onSkippedCrop","attachment","state","get","toJSON","setFileInRepeaterField","setImageInRepeaterField","flex_width","flex_height","setState","croppedImage","x1","y1","flexWidth","flexHeight","realWidth","realHeight","xInit","yInit","ratio","xImg","yImg","set","mustBeCropped","handles","keys","instance","persistent","imageWidth","imageHeight","x2","y2","aspectRatio","maxHeight","maxWidth","flexW","flexH","dstW","dstH","imgW","imgH","$targetDiv","url","hide","slideDown","id","show","filename","mime_type","$uploadButton","getValue","JSON","parse","decodeURI","setting","newValue","refresh","filtering","filteredValue","filter","index","push","ind","encodeURI","stringify","templateData","newRow","i","newRowSetting","hasOwnProperty","default","appendTo","row_label","deleteRow","fieldName","element","updateField","call","$rows","newOrder","settings","newRows","newSettings","newPosition","oldPosition","prop","currentSettings","fieldId","row","is","colorPicker","palettes","change","ui","currentPicker","color","toString","wpColorPicker","dataField","dropdown","currentDropdown"],"version":3,"file":"control.js.map"}